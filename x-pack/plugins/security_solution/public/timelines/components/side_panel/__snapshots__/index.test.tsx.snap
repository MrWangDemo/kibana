// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Details Panel Component DetailsPanel: rendering it should not render the DetailsPanel if an expanded detail with a panelView, but not params have been set: 
        <DetailsPanel
          browserFields={Object {}}
          docValueFields={Array []}
          handleOnPanelClosed={[MockFunction]}
          isFlyoutView={false}
          runtimeMappings={Object {}}
          tabType="query"
          timelineId="test"
        />
       1`] = `
<DetailsPanel
  browserFields={Object {}}
  docValueFields={Array []}
  handleOnPanelClosed={[MockFunction]}
  isFlyoutView={false}
  runtimeMappings={Object {}}
  tabType="query"
  timelineId="test"
/>
`;

exports[`Details Panel Component DetailsPanel: rendering it should not render the DetailsPanel if no expanded detail has been set in the reducer 1`] = `
<DetailsPanel
  browserFields={Object {}}
  docValueFields={Array []}
  handleOnPanelClosed={[MockFunction]}
  isFlyoutView={false}
  runtimeMappings={Object {}}
  tabType="query"
  timelineId="test"
/>
`;

exports[`Details Panel Component DetailsPanel:EventDetails: rendering it should render the Event Details Panel when the panelView is set and the associated params are set 1`] = `
Array [
  .c0 {
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  margin-top: 8px;
}

<div
    class="euiFlexGroup euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive euiFlexGroup--wrap c0"
  >
    <div
      class="euiFlexItem euiFlexItem--flexGrowZero"
    />
    <div
      class="euiFlexItem euiFlexItem--flexGrowZero"
    >
      <button
        aria-label="close"
        class="euiButtonIcon euiButtonIcon--primary euiButtonIcon--empty euiButtonIcon--xSmall"
        type="button"
      >
        <span
          aria-hidden="true"
          class="euiButtonIcon__icon"
          color="inherit"
          data-euiicon-type="cross"
        />
      </button>
    </div>
  </div>,
  <div
    class="euiSpacer euiSpacer--m css-jv9za2-euiSpacer-m"
  />,
  <span
    aria-label="Loading"
    class="euiLoadingContent"
    role="progressbar"
  >
    <span
      class="css-1mpwu6v-euiLoadingContent__singleLine"
    />
    <span
      class="css-1mpwu6v-euiLoadingContent__singleLine"
    />
    <span
      class="css-1mpwu6v-euiLoadingContent__singleLine"
    />
    <span
      class="css-1mpwu6v-euiLoadingContent__singleLine"
    />
    <span
      class="css-1mpwu6v-euiLoadingContent__singleLine"
    />
    <span
      class="css-1mpwu6v-euiLoadingContent__singleLine"
    />
    <span
      class="css-1mpwu6v-euiLoadingContent__singleLine"
    />
    <span
      class="css-1mpwu6v-euiLoadingContent__singleLine"
    />
    <span
      class="css-1mpwu6v-euiLoadingContent__singleLine"
    />
    <span
      class="css-1mpwu6v-euiLoadingContent__singleLine"
    />
  </span>,
  <div
    class="euiFlyoutFooter"
    data-test-subj="side-panel-flyout-footer"
  >
    <div
      class="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--justifyContentFlexEnd euiFlexGroup--directionRow euiFlexGroup--responsive"
    >
      <div
        class="euiFlexItem euiFlexItem--flexGrowZero"
      />
    </div>
  </div>,
]
`;

exports[`Details Panel Component DetailsPanel:EventDetails: rendering it should render the Event Details view of the Details Panel in the flyout when the panelView is eventDetail and the eventId is set 1`] = `
Array [
  .c0 {
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  margin-top: 8px;
}

.c1 .euiFlyoutBody__overflow {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: hidden;
}

.c1 .euiFlyoutBody__overflow .euiFlyoutBody__overflowContent {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: hidden;
  padding: 0 16px 16px;
}

<EuiFlyout
    data-test-subj="timeline:details-panel:flyout"
    onClose={[Function]}
    ownFocus={false}
    size="m"
  >
    <div
      data-eui="EuiFlyout"
      data-test-subj="timeline:details-panel:flyout"
      role="dialog"
    >
      <button
        aria-label="Close this dialog"
        data-test-subj="euiFlyoutCloseButton"
        onClick={[Function]}
        type="button"
      />
      <EventDetailsPanelComponent
        browserFields={Object {}}
        docValueFields={Array []}
        expandedEvent={
          Object {
            "eventId": "my-id",
            "indexName": "my-index",
          }
        }
        handleOnEventClosed={[Function]}
        isDraggable={false}
        isFlyoutView={true}
        runtimeMappings={Object {}}
        tabType="query"
        timelineId="test"
      >
        <EuiFlyoutHeader
          hasBorder={false}
        >
          <div
            className="euiFlyoutHeader"
          >
            <ExpandableEventTitle
              isAlert={false}
              loading={true}
              ruleName=""
              timestamp=""
            >
              <Styled(EuiFlexGroup)
                gutterSize="none"
                justifyContent="spaceBetween"
                wrap={true}
              >
                <EuiFlexGroup
                  className="c0"
                  gutterSize="none"
                  justifyContent="spaceBetween"
                  wrap={true}
                >
                  <div
                    className="euiFlexGroup euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive euiFlexGroup--wrap c0"
                  >
                    <EuiFlexItem
                      grow={false}
                    >
                      <div
                        className="euiFlexItem euiFlexItem--flexGrowZero"
                      />
                    </EuiFlexItem>
                  </div>
                </EuiFlexGroup>
              </Styled(EuiFlexGroup)>
            </ExpandableEventTitle>
          </div>
        </EuiFlyoutHeader>
        <Styled(EuiFlyoutBody)>
          <EuiFlyoutBody
            className="c1"
          >
            <div
              className="euiFlyoutBody c1"
            >
              <div
                className="euiFlyoutBody__overflow"
                tabIndex={0}
              >
                <div
                  className="euiFlyoutBody__overflowContent"
                >
                  <ExpandableEvent
                    browserFields={Object {}}
                    detailsData={null}
                    event={
                      Object {
                        "eventId": "my-id",
                        "indexName": "my-index",
                      }
                    }
                    handleOnEventClosed={[Function]}
                    hostRisk={null}
                    isAlert={false}
                    isDraggable={false}
                    loading={true}
                    timelineId="test"
                    timelineTabType="flyout"
                  >
                    <EuiLoadingContent
                      lines={10}
                    >
                      <span
                        className="euiLoadingContent"
                      >
                        <span
                          className="euiLoadingContent__singleLine"
                          key="0"
                        >
                          <span
                            className="euiLoadingContent__singleLineBackground"
                          />
                        </span>
                        <span
                          className="euiLoadingContent__singleLine"
                          key="1"
                        >
                          <span
                            className="euiLoadingContent__singleLineBackground"
                          />
                        </span>
                        <span
                          className="euiLoadingContent__singleLine"
                          key="2"
                        >
                          <span
                            className="euiLoadingContent__singleLineBackground"
                          />
                        </span>
                        <span
                          className="euiLoadingContent__singleLine"
                          key="3"
                        >
                          <span
                            className="euiLoadingContent__singleLineBackground"
                          />
                        </span>
                        <span
                          className="euiLoadingContent__singleLine"
                          key="4"
                        >
                          <span
                            className="euiLoadingContent__singleLineBackground"
                          />
                        </span>
                        <span
                          className="euiLoadingContent__singleLine"
                          key="5"
                        >
                          <span
                            className="euiLoadingContent__singleLineBackground"
                          />
                        </span>
                        <span
                          className="euiLoadingContent__singleLine"
                          key="6"
                        >
                          <span
                            className="euiLoadingContent__singleLineBackground"
                          />
                        </span>
                        <span
                          className="euiLoadingContent__singleLine"
                          key="7"
                        >
                          <span
                            className="euiLoadingContent__singleLineBackground"
                          />
                        </span>
                        <span
                          className="euiLoadingContent__singleLine"
                          key="8"
                        >
                          <span
                            className="euiLoadingContent__singleLineBackground"
                          />
                        </span>
                        <span
                          className="euiLoadingContent__singleLine"
                          key="9"
                        >
                          <span
                            className="euiLoadingContent__singleLineBackground"
                          />
                        </span>
                      </span>
                    </EuiLoadingContent>
                  </ExpandableEvent>
                </div>
              </div>
            </div>
          </EuiFlyoutBody>
        </Styled(EuiFlyoutBody)>
        <Connect(Component)
          detailsData={null}
          detailsEcsData={null}
          expandedEvent={
            Object {
              "eventId": "my-id",
              "indexName": "my-index",
            }
          }
          handleOnEventClosed={[Function]}
          isHostIsolationPanelOpen={false}
          loadingEventDetails={true}
          onAddIsolationStatusClick={[Function]}
          refetchFlyoutData={[Function]}
          timelineId="test"
        >
          <Memo()
            detailsData={null}
            detailsEcsData={null}
            dispatch={[Function]}
            expandedEvent={
              Object {
                "eventId": "my-id",
                "indexName": "my-index",
              }
            }
            globalQuery={Array []}
            handleOnEventClosed={[Function]}
            isHostIsolationPanelOpen={false}
            loadingEventDetails={true}
            onAddIsolationStatusClick={[Function]}
            refetchFlyoutData={[Function]}
            timelineId="test"
            timelineQuery={
              Object {
                "id": "",
                "inspect": null,
                "isInspected": false,
                "loading": false,
                "refetch": null,
                "selectedInspectIndex": 0,
              }
            }
          >
            <EuiFlyoutFooter
              data-test-subj="side-panel-flyout-footer"
            >
              <div
                className="euiFlyoutFooter"
                data-test-subj="side-panel-flyout-footer"
              >
                <EuiFlexGroup
                  justifyContent="flexEnd"
                >
                  <div
                    className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--justifyContentFlexEnd euiFlexGroup--directionRow euiFlexGroup--responsive"
                  >
                    <EuiFlexItem
                      grow={false}
                    >
                      <div
                        className="euiFlexItem euiFlexItem--flexGrowZero"
                      />
                    </EuiFlexItem>
                  </div>
                </EuiFlexGroup>
              </div>
            </EuiFlyoutFooter>
          </Memo()>
        </Connect(Component)>
      </EventDetailsPanelComponent>
    </div>
  </EuiFlyout>,
  .c0 {
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  margin-top: 8px;
}

.c1 .euiFlyoutBody__overflow {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: hidden;
}

.c1 .euiFlyoutBody__overflow .euiFlyoutBody__overflowContent {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: hidden;
  padding: 0 16px 16px;
}

<div
    data-eui="EuiFlyout"
    data-test-subj="timeline:details-panel:flyout"
    role="dialog"
  >
    <button
      aria-label="Close this dialog"
      data-test-subj="euiFlyoutCloseButton"
      onClick={[Function]}
      type="button"
    />
    <EventDetailsPanelComponent
      browserFields={Object {}}
      docValueFields={Array []}
      expandedEvent={
        Object {
          "eventId": "my-id",
          "indexName": "my-index",
        }
      }
      handleOnEventClosed={[Function]}
      isDraggable={false}
      isFlyoutView={true}
      runtimeMappings={Object {}}
      tabType="query"
      timelineId="test"
    >
      <EuiFlyoutHeader
        hasBorder={false}
      >
        <div
          className="euiFlyoutHeader"
        >
          <ExpandableEventTitle
            isAlert={false}
            loading={true}
            ruleName=""
            timestamp=""
          >
            <Styled(EuiFlexGroup)
              gutterSize="none"
              justifyContent="spaceBetween"
              wrap={true}
            >
              <EuiFlexGroup
                className="c0"
                gutterSize="none"
                justifyContent="spaceBetween"
                wrap={true}
              >
                <div
                  className="euiFlexGroup euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive euiFlexGroup--wrap c0"
                >
                  <EuiFlexItem
                    grow={false}
                  >
                    <div
                      className="euiFlexItem euiFlexItem--flexGrowZero"
                    />
                  </EuiFlexItem>
                </div>
              </EuiFlexGroup>
            </Styled(EuiFlexGroup)>
          </ExpandableEventTitle>
        </div>
      </EuiFlyoutHeader>
      <Styled(EuiFlyoutBody)>
        <EuiFlyoutBody
          className="c1"
        >
          <div
            className="euiFlyoutBody c1"
          >
            <div
              className="euiFlyoutBody__overflow"
              tabIndex={0}
            >
              <div
                className="euiFlyoutBody__overflowContent"
              >
                <ExpandableEvent
                  browserFields={Object {}}
                  detailsData={null}
                  event={
                    Object {
                      "eventId": "my-id",
                      "indexName": "my-index",
                    }
                  }
                  handleOnEventClosed={[Function]}
                  hostRisk={null}
                  isAlert={false}
                  isDraggable={false}
                  loading={true}
                  timelineId="test"
                  timelineTabType="flyout"
                >
                  <EuiLoadingContent
                    lines={10}
                  >
                    <span
                      className="euiLoadingContent"
                    >
                      <span
                        className="euiLoadingContent__singleLine"
                        key="0"
                      >
                        <span
                          className="euiLoadingContent__singleLineBackground"
                        />
                      </span>
                      <span
                        className="euiLoadingContent__singleLine"
                        key="1"
                      >
                        <span
                          className="euiLoadingContent__singleLineBackground"
                        />
                      </span>
                      <span
                        className="euiLoadingContent__singleLine"
                        key="2"
                      >
                        <span
                          className="euiLoadingContent__singleLineBackground"
                        />
                      </span>
                      <span
                        className="euiLoadingContent__singleLine"
                        key="3"
                      >
                        <span
                          className="euiLoadingContent__singleLineBackground"
                        />
                      </span>
                      <span
                        className="euiLoadingContent__singleLine"
                        key="4"
                      >
                        <span
                          className="euiLoadingContent__singleLineBackground"
                        />
                      </span>
                      <span
                        className="euiLoadingContent__singleLine"
                        key="5"
                      >
                        <span
                          className="euiLoadingContent__singleLineBackground"
                        />
                      </span>
                      <span
                        className="euiLoadingContent__singleLine"
                        key="6"
                      >
                        <span
                          className="euiLoadingContent__singleLineBackground"
                        />
                      </span>
                      <span
                        className="euiLoadingContent__singleLine"
                        key="7"
                      >
                        <span
                          className="euiLoadingContent__singleLineBackground"
                        />
                      </span>
                      <span
                        className="euiLoadingContent__singleLine"
                        key="8"
                      >
                        <span
                          className="euiLoadingContent__singleLineBackground"
                        />
                      </span>
                      <span
                        className="euiLoadingContent__singleLine"
                        key="9"
                      >
                        <span
                          className="euiLoadingContent__singleLineBackground"
                        />
                      </span>
                    </span>
                  </EuiLoadingContent>
                </ExpandableEvent>
              </div>
            </div>
          </div>
        </EuiFlyoutBody>
      </Styled(EuiFlyoutBody)>
      <Connect(Component)
        detailsData={null}
        detailsEcsData={null}
        expandedEvent={
          Object {
            "eventId": "my-id",
            "indexName": "my-index",
          }
        }
        handleOnEventClosed={[Function]}
        isHostIsolationPanelOpen={false}
        loadingEventDetails={true}
        onAddIsolationStatusClick={[Function]}
        refetchFlyoutData={[Function]}
        timelineId="test"
      >
        <Memo()
          detailsData={null}
          detailsEcsData={null}
          dispatch={[Function]}
          expandedEvent={
            Object {
              "eventId": "my-id",
              "indexName": "my-index",
            }
          }
          globalQuery={Array []}
          handleOnEventClosed={[Function]}
          isHostIsolationPanelOpen={false}
          loadingEventDetails={true}
          onAddIsolationStatusClick={[Function]}
          refetchFlyoutData={[Function]}
          timelineId="test"
          timelineQuery={
            Object {
              "id": "",
              "inspect": null,
              "isInspected": false,
              "loading": false,
              "refetch": null,
              "selectedInspectIndex": 0,
            }
          }
        >
          <EuiFlyoutFooter
            data-test-subj="side-panel-flyout-footer"
          >
            <div
              className="euiFlyoutFooter"
              data-test-subj="side-panel-flyout-footer"
            >
              <EuiFlexGroup
                justifyContent="flexEnd"
              >
                <div
                  className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--justifyContentFlexEnd euiFlexGroup--directionRow euiFlexGroup--responsive"
                >
                  <EuiFlexItem
                    grow={false}
                  >
                    <div
                      className="euiFlexItem euiFlexItem--flexGrowZero"
                    />
                  </EuiFlexItem>
                </div>
              </EuiFlexGroup>
            </div>
          </EuiFlyoutFooter>
        </Memo()>
      </Connect(Component)>
    </EventDetailsPanelComponent>
  </div>,
]
`;

exports[`Details Panel Component DetailsPanel:HostDetails: rendering it should render the Host Details view in the Details Panel when the panelView is hostDetail and the hostName is set 1`] = `
.c3 {
  color: #535966;
}

.c0 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c0 > * {
  max-width: 100%;
}

.c0 .inspectButtonComponent {
  pointer-events: none;
  opacity: 0;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
}

.c0:hover .inspectButtonComponent {
  pointer-events: auto;
  opacity: 1;
}

.c2 dt {
  font-size: 12px !important;
}

.c2 dd {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

.c2 dd > div {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

.c1 {
  position: relative;
}

.c1 .euiButtonIcon {
  position: absolute;
  right: 12px;
  top: 6px;
  z-index: 2;
}

.c4 {
  padding: 16px;
  background: rgba(250,251,253,0.9);
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: 1000;
}

.c5 {
  height: 100%;
}

<div
  class="c0"
  data-test-subj="hoverVisibilityContainer"
>
  <div
    class="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionColumn euiFlexGroup--responsive c1"
    data-test-subj="host-overview"
  >
    <div
      class="euiFlexItem"
    >
      <dl
        class="euiDescriptionList euiDescriptionList--row c2"
      >
        <dt
          class="euiDescriptionList__title"
        >
          Host ID
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
        <dt
          class="euiDescriptionList__title"
        >
          First seen
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
        <dt
          class="euiDescriptionList__title"
        >
          Last seen
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
      </dl>
    </div>
    <div
      class="euiFlexItem"
    >
      <dl
        class="euiDescriptionList euiDescriptionList--row c2"
      >
        <dt
          class="euiDescriptionList__title"
        >
          IP addresses
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
        <dt
          class="euiDescriptionList__title"
        >
          MAC addresses
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
        <dt
          class="euiDescriptionList__title"
        >
          Platform
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
      </dl>
    </div>
    <div
      class="euiFlexItem"
    >
      <dl
        class="euiDescriptionList euiDescriptionList--row c2"
      >
        <dt
          class="euiDescriptionList__title"
        >
          Operating system
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
        <dt
          class="euiDescriptionList__title"
        >
          Family
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
        <dt
          class="euiDescriptionList__title"
        >
          Version
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
        <dt
          class="euiDescriptionList__title"
        >
          Architecture
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
      </dl>
    </div>
    <div
      class="euiFlexItem"
    >
      <dl
        class="euiDescriptionList euiDescriptionList--row c2"
      >
        <dt
          class="euiDescriptionList__title"
        >
          Cloud provider
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
        <dt
          class="euiDescriptionList__title"
        >
          Region
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
        <dt
          class="euiDescriptionList__title"
        >
          Instance ID
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
        <dt
          class="euiDescriptionList__title"
        >
          Machine type
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
      </dl>
    </div>
    <aside
      class="c4"
    >
      <div
        class="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentCenter euiFlexGroup--directionColumn euiFlexGroup--responsive c5"
        overlay="[object Object]"
      >
        <div
          class="euiFlexItem euiFlexItem--flexGrowZero"
        >
          <span
            aria-label="Loading"
            class="euiLoadingSpinner css-1ow0yso-euiLoadingSpinner-xl"
            data-test-subj="loading-spinner"
            role="progressbar"
          />
        </div>
      </div>
    </aside>
  </div>
</div>
`;

exports[`Details Panel Component DetailsPanel:NetworkDetails: rendering it should render the Network Details view in the Details Panel when the panelView is networkDetail and the ip is set 1`] = `
.c3 {
  color: #535966;
}

.c0 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c0 > * {
  max-width: 100%;
}

.c0 .inspectButtonComponent {
  pointer-events: none;
  opacity: 0;
  -webkit-transition: opacity 250ms ease;
  transition: opacity 250ms ease;
}

.c0:hover .inspectButtonComponent {
  pointer-events: auto;
  opacity: 1;
}

.c2 dt {
  font-size: 12px !important;
}

.c2 dd {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

.c2 dd > div {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

.c1 {
  position: relative;
}

.c1 .euiButtonIcon {
  position: absolute;
  right: 12px;
  top: 6px;
  z-index: 2;
}

.c4 {
  padding: 16px;
  background: rgba(250,251,253,0.9);
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  z-index: 1000;
}

.c5 {
  height: 100%;
}

<div
  class="c0"
  data-test-subj="hoverVisibilityContainer"
>
  <div
    class="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionColumn euiFlexGroup--responsive c1"
  >
    <div
      class="euiFlexItem"
    >
      <dl
        class="euiDescriptionList euiDescriptionList--row c2"
      >
        <dt
          class="euiDescriptionList__title"
        >
          Location
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
        <dt
          class="euiDescriptionList__title"
        >
          Autonomous system
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
      </dl>
    </div>
    <div
      class="euiFlexItem"
    >
      <dl
        class="euiDescriptionList euiDescriptionList--row c2"
      >
        <dt
          class="euiDescriptionList__title"
        >
          First seen
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
        <dt
          class="euiDescriptionList__title"
        >
          Last seen
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
      </dl>
    </div>
    <div
      class="euiFlexItem"
    >
      <dl
        class="euiDescriptionList euiDescriptionList--row c2"
      >
        <dt
          class="euiDescriptionList__title"
        >
          Host ID
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
        <dt
          class="euiDescriptionList__title"
        >
          Host name
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="c3"
          >
            —
          </span>
        </dd>
      </dl>
    </div>
    <div
      class="euiFlexItem"
    >
      <dl
        class="euiDescriptionList euiDescriptionList--row c2"
      >
        <dt
          class="euiDescriptionList__title"
        >
          WhoIs
        </dt>
        <dd
          class="euiDescriptionList__description"
        >
          <span
            class="euiToolTipAnchor"
          >
            <a
              class="euiLink css-102pf9n-euiLink-primary"
              data-test-subj="externalLink"
              href="https://www.iana.org/whois?q=woohoo!"
              rel="noopener noreferrer"
              target="_blank"
            >
              iana.org
              <span
                class="css-q4vwwx-euiLink__externalIcon"
                data-euiicon-type="popout"
              >
                External link
              </span>
              <span
                class="euiScreenReaderOnly"
              >
                (opens in a new tab or window)
              </span>
            </a>
          </span>
        </dd>
        <dt
          class="euiDescriptionList__title"
        >
          Reputation
        </dt>
        <dd
          class="euiDescriptionList__description"
        />
      </dl>
    </div>
    <aside
      class="c4"
    >
      <div
        class="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentCenter euiFlexGroup--directionColumn euiFlexGroup--responsive c5"
        overlay="[object Object]"
      >
        <div
          class="euiFlexItem euiFlexItem--flexGrowZero"
        >
          <span
            aria-label="Loading"
            class="euiLoadingSpinner css-1ow0yso-euiLoadingSpinner-xl"
            data-test-subj="loading-spinner"
            role="progressbar"
          />
        </div>
      </div>
    </aside>
  </div>
</div>
`;
